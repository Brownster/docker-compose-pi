version: "3.8"
services:
  vpn:
    image: $GLUETUN_IMAGE:$IMAGE_RELEASE
    container_name: $VPN_CONTAINER
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    volumes:
      - $DOCKER_DIR/$GLUETUN_CONTAINER:/gluetun
    env_file:
      - $DOCKER_DIR/gluetun/.env
    healthcheck:
      test: curl --fail http://localhost:8000 || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    ports:
      - $JACKET_PORT:$JACKET_PORT  # Jackett
      - $SONARR_PORT:$SONARR_PORT   # Sonarr
      - $RADARR_PORT:$RADARR_PORT  # Radarr
      - $TRANSMISSION_PORT:$TRANSMISSION_PORT   # Transmission
      - $NZBGET:$NZBGET   # NZBGet
    networks:
      - $CONTAINER_NETWORK

  jackett:
    image: $JACKETT_IMAGE:$IMAGE_RELEASE
    container_name: $JACKETT_CONTAINER
    network_mode: "service:$VPN_CONTAINER"
    environment:
      - TZ=$TIMEZONE
      - PUID=1000
      - PGID=1000
    volumes:
      - $DOCKER_DIR/$JACKETT_CONTAINER:/config
      - $DOWNLOADS:/downloads
    restart: unless-stopped

  sonarr:
    image: $SONARR_IMAGE:$IMAGE_RELEASE
    container_name: $SONARR_CONTAINER
    network_mode: "service:$VPN_CONTAINER"
    environment:
      - TZ=$TIMEZONE
      - PUID=1000
      - PGID=1000
    volumes:
      - $DOCKER_DIR/$SONARR_CONTAINER:/config
      - $STORAGE_MOUNT/$TVSHOWS_FOLDER:/tv
      - $DOWNLOADS:/downloads
    restart: unless-stopped

  radarr:
    image: RADARR_IMAGE:$IMAGE_RELEASE
    container_name: $RADARR_CONTAINER
    network_mode: "service:$VPN_CONTAINER"
    environment:
      - TZ=$TIMEZONE
      - PUID=1000
      - PGID=1000
    volumes:
      - $DOCKER_DIR/$RADARR_CONTAINER:/config
      - $STORAGE_MOUNT/$MOVIES_FOLDER:/movies
      - $DOWNLOADS:/downloads
    restart: unless-stopped

  transmission:
    image: $TRANSMISSON_IMAGE:$IMAGE_RELEASE
    container_name: TRANSMISSION__CONTAINER
    network_mode: "service:$VPN_CONTAINER"
    environment:
      - TZ=$TIMEZONE
      - PUID=1000
      - PGID=1000
    volumes:
      - $DOCKER_DIR/TRANSMSSION_CONTAINER:/config
      - $DOWNLOADS:/downloads
    restart: unless-stopped

  nzbget:
    image: $NZBGET_IMAGE:$IMAGE_RELEASE
    container_name: $NZBGET_CONTAINER
    network_mode: "service:$VPN_CONTAINER"
    environment:
      - TZ=$TIMEZONE
      - PUID=1000
      - PGID=1000
    volumes:
      - $DOCKER_DIR/$NZBGET_CONTAINER:/config
      - $DOWNLOADS/incomplete:/incomplete
      - $DOWNLOADS/complete:/complete
    restart: unless-stopped

  jellyfin:
    image: $JELLYFIN_IMAGE:$IMAGE_RELEASE
    container_name: jellyfin
    network_mode: bridge
    environment:
      - TZ=$TIMEZONE
      - PUID=1000
      - PGID=1000
    volumes:
      - $DOCKER_DIR/$JELLYFIN_CONTAINER:/config
      - $STORAGE_MOUNT:/media
    ports:
      - 8096:8096
      - 8920:8920
    restart: unless-stopped
    networks:
      - default

  watchtower:
    image: $WATCHTOWER_IMAGE:$IMAGE_RELEASE
    container_name: $WATCHTOWER__CONTAINER
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_SCHEDULE="0 3 * * *" # Run daily at 3 AM
    restart: unless-stopped
    networks:
      - default

networks:
  $CONTAINER_NETWORK:
    driver: bridge
  default:
    driver: bridge
